<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>